<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>